<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>